<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>